<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>